building sfml from source and setting up tgui:

    download cmake-gui (3.25.3, windows x86 64 msi) (https://cmake.org/files/v3.25/)
    download git (https://git-scm.com/downloads/win x64 setup "Git from the command line and also from 3rd-party software")
    build sfml (https://www.sfml-dev.org/tutorials/3.0/getting-started/build-from-source/#configuring-your-sfml-build)
        use the following entry: CMAKE_INSTALL_PREFIX, path, install folder path
        configure
        generate
        (in console)
        mingw32-make
        mingw32-make install

    apparently i have to not use msys2 ucrt64, which is utter dogshit (hold on let me figure this out)
    set up winlibs (https://www.youtube.com/watch?v=k6juv3mIr9o)
    add it to path ABOVE MSYS2 PATH

    build project
        set source as folder with source
        set build as the build folder
        configure
            MinGW Makefiles
            Specify native compilers
            C:/mingw64/bin/gcc.exe
            C:/mingw64/bin/g++.exe
        generate
        (in console)
        mingw32-make
    now time to add TGUI, so make significant edits to the CMakeLists.txt file
    build again, repeat steps

setting up sqlite:

    download amalgamation files (https://www.sqlite.org/download.html)
    extract sqlite3.c and .h and copy them into the project
    include "sqlite.h" in header
    if compiling from command line:
        gcc -c sqlite3.c
        g++ main.cpp sqlite3.o
    for cmake:
        just add sqlite3.c to the cmakelists file

set up resource files:

    use this guide for the basics (#https://dev.to/atimin/how-to-include-external-resources-into-your-executables-in-c-3cpm)
    then reference existing code in tests

next steps:
    comment and ReadMe
    determine how to load database with deserialize
    Edit text boxes to act more like text boxes (i.e. cursor change, selectable text)
    More sophisticated text replacement for output